---
layout:     post
title:      "fork项目"
subtitle:   ""
date:       2024-05-29
author:     " Shallow Dreamer "
header-img: "img/post-bg-js-version.jpg"
tags:
    - git
---

要 fork 一个项目并保持与原项目的更新同步，可以通过以下步骤实现：

### 步骤 1: Fork 原始项目

在原始项目的页面上点击 "Fork" 按钮，将原始项目 fork 到你的 GitHub 账户下。

### 步骤 2: Clone Fork 的项目到本地

使用 git clone 命令将 fork 的项目克隆到本地计算机：

```bash
git clone https://github.com/你的用户名/项目名.git
```

### 步骤 3: 添加原始项目的远程仓库

进入到克隆的项目目录，并添加原始项目的远程仓库：

```bash
cd 项目名
git remote add upstream https://github.com/原始项目作者的用户名/项目名.git
```

### 步骤 4: 拉取原始项目的更新代码

在你的本地项目中执行以下命令，从原始项目的远程仓库中拉取更新：

```bash
git fetch upstream
git checkout master
git merge upstream/master
```

这将从原始项目的远程仓库中拉取最新的代码，并将其合并到你的本地 master 分支中。

### 步骤 5: 推送更新到 Fork 项目

如果你 fork 的项目有自己的开发分支，请确保在该分支上执行以下操作：

```bash
git push origin your-branch-name
```

如果你只有 master 分支，则直接推送到 master 分支：

```bash
git push origin master
```

### 步骤 6: 定期同步更新

在你的本地项目中，定期执行步骤 4 中的操作，以便将原始项目的更新同步到你的 fork 项目中。这样你的 fork 项目就能保持与原始项目的更新同步，同时保留你自己的修改。

### 总结

通过这些步骤，你就能够 fork 一个项目并保持与原始项目的更新同步，同时保留你自己的修改。这样你就可以在继续开发自己的功能的同时，及时获取到原始项目的更新。
